{"ast":null,"code":"var _jsxFileName = \"/Users/thierryvo/Coding/Planity 202312/src/AppointmentView.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport determineOverlaps from \"./AppointmentModel.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction getRandomColor() {\n  // Darker colors for better contrast and readability\n  const darken = 1.25;\n  const r = Math.floor(Math.random() * 256 / darken);\n  const g = Math.floor(Math.random() * 256 / darken);\n  const b = Math.floor(Math.random() * 256 / darken);\n  return `rgb(${r}, ${g}, ${b})`;\n}\nconst AppointmentView = ({\n  inputJsonFilePath\n}) => {\n  _s();\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    //Fetch and process appointment data\n    const fetchAppointmentData = async () => {\n      try {\n        const response = await import(`${inputJsonFilePath}`);\n        setData(determineOverlaps(response.default));\n      } catch (error) {\n        console.error(\"Failed to load appointments\", error);\n      }\n    };\n    fetchAppointmentData();\n  }, [inputJsonFilePath]);\n  const calculateTopPosition = startTimeConverted => {\n    const workdayStart = 9 * 60; // 9:00 AM in minutes\n    const totalMinutesInWorkday = 12 * 60; // 12 hours workdays\n    return (startTimeConverted - workdayStart) * 100 / totalMinutesInWorkday + \"vh\";\n  };\n  const calculateHeight = duration => {\n    const totalMinutesInWorkday = 12 * 60; // 12 hours workdays\n    return duration * 100 / totalMinutesInWorkday + \"vh\";\n  };\n  const calculateWidth = overlapsCount => {\n    return `${100 / overlapsCount - 0.2}vw`; // Adjust the -0.2 value as needed for margins\n  };\n  const calculateLeft = (columnIndex, overlapsCount) => {\n    return `${columnIndex * 100 / overlapsCount}vw`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: Object.keys(data).map(key => {\n      const appointment = data[key];\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"AppointmentViewSlot\",\n        style: {\n          backgroundColor: getRandomColor(),\n          top: calculateTopPosition(appointment.startTimeConverted),\n          left: calculateLeft(appointment.columnIndex, appointment.overlapsCount),\n          width: calculateWidth(appointment.overlapsCount),\n          height: calculateHeight(appointment.duration)\n        },\n        children: [key, \" - \", appointment.startTime, \" - \", appointment.duration, \"min\"]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(AppointmentView, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = AppointmentView;\nAppointmentView.propTypes = {\n  inputJsonFilePath: PropTypes.string.isRequired\n};\nexport default AppointmentView;\nvar _c;\n$RefreshReg$(_c, \"AppointmentView\");","map":{"version":3,"names":["React","useState","useEffect","PropTypes","determineOverlaps","jsxDEV","_jsxDEV","getRandomColor","darken","r","Math","floor","random","g","b","AppointmentView","inputJsonFilePath","_s","data","setData","fetchAppointmentData","response","default","error","console","calculateTopPosition","startTimeConverted","workdayStart","totalMinutesInWorkday","calculateHeight","duration","calculateWidth","overlapsCount","calculateLeft","columnIndex","children","Object","keys","map","key","appointment","className","style","backgroundColor","top","left","width","height","startTime","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","string","isRequired","$RefreshReg$"],"sources":["/Users/thierryvo/Coding/Planity 202312/src/AppointmentView.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport determineOverlaps from \"./AppointmentModel.js\";\n\nfunction getRandomColor() {\n  // Darker colors for better contrast and readability\n  const darken = 1.25;\n\n  const r = Math.floor((Math.random() * 256) / darken);\n  const g = Math.floor((Math.random() * 256) / darken);\n  const b = Math.floor((Math.random() * 256) / darken);\n  return `rgb(${r}, ${g}, ${b})`;\n}\n\nconst AppointmentView = ({ inputJsonFilePath }) => {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    //Fetch and process appointment data\n    const fetchAppointmentData = async () => {\n      try {\n        const response = await import(`${inputJsonFilePath}`);\n        setData(determineOverlaps(response.default));\n      } catch (error) {\n        console.error(\"Failed to load appointments\", error);\n      }\n    };\n    fetchAppointmentData();\n  }, [inputJsonFilePath]);\n\n  const calculateTopPosition = (startTimeConverted) => {\n    const workdayStart = 9 * 60; // 9:00 AM in minutes\n    const totalMinutesInWorkday = 12 * 60; // 12 hours workdays\n    return (\n      ((startTimeConverted - workdayStart) * 100) / totalMinutesInWorkday + \"vh\"\n    );\n  };\n\n  const calculateHeight = (duration) => {\n    const totalMinutesInWorkday = 12 * 60; // 12 hours workdays\n    return (duration * 100) / totalMinutesInWorkday + \"vh\";\n  };\n\n  const calculateWidth = (overlapsCount) => {\n    return `${100 / overlapsCount - 0.2}vw`; // Adjust the -0.2 value as needed for margins\n  };\n\n  const calculateLeft = (columnIndex, overlapsCount) => {\n    return `${(columnIndex * 100) / overlapsCount}vw`;\n  };\n\n  return (\n    <div>\n      {Object.keys(data).map((key) => {\n        const appointment = data[key];\n        return (\n          <div\n            key={key}\n            className=\"AppointmentViewSlot\"\n            style={{\n              backgroundColor: getRandomColor(),\n              top: calculateTopPosition(appointment.startTimeConverted),\n              left: calculateLeft(\n                appointment.columnIndex,\n                appointment.overlapsCount\n              ),\n              width: calculateWidth(appointment.overlapsCount),\n              height: calculateHeight(appointment.duration),\n            }}\n          >\n            {key} - {appointment.startTime} - {appointment.duration}min\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nAppointmentView.propTypes = {\n  inputJsonFilePath: PropTypes.string.isRequired,\n};\n\nexport default AppointmentView;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}